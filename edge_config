#!/usr/bin/env bash

if [ ! -f reboot1 ]; then
  echo "to successfully configure this IoT edege device, run edge_config script 6 times"
  echo "running script 1/6 times"
  sleep 5
  swupd update
  touch reboot1
  #reboot here
  echo "rebooting... run script 5 times after reboot"
  sleep 5
  reboot
  else
  if [ ! -f reboot2 ]; then
    echo "running script 2/6 times"
    sleep 5
    swupd bundle-add network-basic
    swupd bundle-add containers-basic
    swupd bundle-add vim-minimal
    swupd bundle-add ansible
    Turn off swap
    systemctl mask $(sed -n -e 's#^/dev/\([0-9a-z]*\).*#dev-\1.swap#p' /proc/swaps) 2>/dev/null
    swapoff -a
    touch reboot2
    #reboot here
    echo "rebooting... run script 4 times after reboot"
    sleep 5
    reboot
    else
    if [ ! -f reboot3 ]; then
      echo "running script 3/6 times"
      sleep 5
      mkdir -p /etc/sysctl.d/
      tee /etc/sysctl.d/60-k8s.conf > /dev/null <<EOF
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
EOF
      systemctl restart systemd-sysctl
      nmcli connection modify "Wired connection 1" \
      ipv4.method "manual" \
      ipv4.addresses "192.168.0.20/24" \
      ipv4.gateway "192.168.0.1" \
      ipv4.dns "8.8.8.8,1.1.1.1"
      systemctl restart NetworkManager
      touch reboot3
      #reboot here
      echo "rebooting... run script 3 times after reboot"
      sleep 5
      reboot
      else
      if [ ! -f reboot4 ]; then
        echo "running script 4/6 times"
        sleep 5
        echo "127.0.0.1 localhost `hostname`" | tee --append /etc/hosts
        swupd autoupdate --disable
        touch reboot4
        #reboot here
        echo "rebooting... run script 2 times after reboot"
        sleep 5
        reboot
	      else
	      if [ ! -f reboot5 ]; then
          echo "running script 5/6 times"
	        sleep 5
	        mkdir /usr/local/bin
	        curl -sfL https://get.k3s.io | sh -
	        # reboot here
	        echo "rebooting... run script 1 time after reboot"
	        touch reboot5
	        reboot
        else
	      echo "running script for the final time 6/6"
	      sleep 5
	      rm reboot1 reboot2 reboot3 reboot4 reboot5
	      echo "device successfully configured!"
	      sleep 15
        fi
      fi
    fi
  fi
fi
